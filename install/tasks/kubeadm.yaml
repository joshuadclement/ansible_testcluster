- name: Check kubelet version
  ansible.builtin.shell: kubelet --version | sed 's/.*v\([0-9]\+[.][0-9]\+[.][0-9]\+\).*/\1/'
  failed_when: False
  changed_when: False
  register: kubelet_version

- name: Check kubeadm version
  ansible.builtin.shell: kubeadm version | sed 's/.*GitVersion:\"v\([0-9]\+[.][0-9]\+[.][0-9]\+\).*/\1/'
  failed_when: False
  changed_when: False
  register: kubeadm_version

- name: Check kubectl version
  ansible.builtin.shell: kubectl version --short | grep "Client Version" | sed 's/.*v\([0-9]\+[.][0-9]\+[.][0-9]\+\)/\1/'
  failed_when: False
  changed_when: False
  register: kubectl_version

- name: Install kubernetes bootstrapping parts
  when:
    - not (kubelet_version.stdout == kubernetes_version and kubeadm_version.stdout == kubernetes_version and kubectl_version.stdout == kubernetes_version )
  block:
    - name: Install kubernetes bootstrapping parts, copy cached packages (1/6)
      loop: ['kubelet', 'kubectl', 'kubeadm']
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/cache/{{ item }}_{{ kubernetes_version }}.deb"
        dest: /tmp/{{ item }}_{{ kubernetes_version }}.deb
        owner: root
        group: root
        mode: 0644

    - name: Install kubernetes bootstrapping parts, install packages (2/6)
      loop: ['kubelet', 'kubectl', 'kubeadm']
      ansible.builtin.apt:
        deb: /tmp/{{ item }}_{{ kubernetes_version }}.deb

      # apt-mark hold kubelet kubeadm kubectl
    - name: Install kubernetes bootstrapping parts, hold package version constant (3/6)
      ansible.builtin.dpkg_selections:
        name: kubelet
        selection: hold

    - name: Install kubernetes bootstrapping parts, hold package version constant (4/6)
      ansible.builtin.dpkg_selections:
        name: kubeadm
        selection: hold

    - name: Install kubernetes bootstrapping parts, hold package version constant (5/6)
      ansible.builtin.dpkg_selections:
        name: kubectl
        selection: hold

    - name: Install kubernetes bootstrapping parts, ensure kubelet is configured to use the internal network address (6/6)
      ansible.builtin.shell: |
        sed -i 's/\(Environment="KUBELET_CONFIG_ARGS=[^ ]*\)\( --node-ip.*\)\?"$/\1 --node-ip={{ trusted_network_address }}"/' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
