- name: Prepare network prerequisites
  block:
  - name: Prepare network prerequisites, load modules br_netfilter (1/4)
    ansible.builtin.shell: modprobe br_netfilter && modprobe overlay

    # scp modules-load-k8s.conf host:/etc/modules-load.d/k8s.conf
  - name: Prepare network prerequisites, set /etc/modules-load.d/k8s.conf (2/4)
    ansible.builtin.copy:
      src: "{{ playbook_dir }}/install/files/modules-load-k8s.conf"
      dest: /etc/modules-load.d/k8s.conf
      owner: root
      group: root
      mode: 0644

    # scp ...
  - name: Prepare network prerequisites, set /etc/sysctl.d/k8s.conf (3/4)
    ansible.builtin.copy:
      src: "{{ playbook_dir }}/install/files/sysctl-k8s.conf"
      dest: /etc/sysctl.d/k8s.conf
      owner: root
      group: root
      mode: 0644

  - name: Prepare network prerequisites, reload sysctl configuration (4/4)
    ansible.builtin.shell: sysctl --system

- name: Check crictl version {{ crictl_version }} installed
  ansible.builtin.shell: |
    crictl --version | sed -e 's/.*\(v[0-9]\+[.][0-9]\+[.][0-9]\+\).*/\1/'
  register: crictl_installed_version
  failed_when: False
  changed_when: False

- name: Install crictl
  when: crictl_installed_version.stdout != crictl_version
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/cache/crictl_{{ crictl_version }}"
    dest: /usr/bin/crictl
    owner: root
    group: root
    mode: 0751

- name: Check cri-o {{ crio_version }} is installed and running
  ansible.builtin.shell: |
    crictl --runtime-endpoint unix:///var/run/crio/crio.sock version | grep RuntimeVersion | sed -e 's/.*\([0-9]\+[.][0-9]\+[.][0-9]\+\).*/\1/'
  register: crio_installed_version
  failed_when: False
  changed_when: False

- name: Install cri-o from cache
  when: crio_installed_version.stdout != crio_version
  block:
    - name: Install cri-o from cache, copy cached packages (1/4)
      loop: ['containernetworking-plugins-crioversion', 'cri-o-runc', 'cri-o']
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/cache/{{ item }}_{{ crio_version }}-{{ crio_version_subpatch }}.deb"
        dest: /tmp/{{ item }}_{{ crio_version }}-{{ crio_version_subpatch }}.deb
        owner: root
        group: root
        mode: 0644

    - name: Install kubernetes bootstrapping parts, install packages (2/4)
      loop: ['containernetworking-plugins-crioversion', 'cri-o-runc', 'cri-o']
      ansible.builtin.apt:
        deb: /tmp/{{ item }}_{{ crio_version }}-{{ crio_version_subpatch }}.deb

      # scp crio.conf host:/etc/crio/crio.conf
    - name: Install cri-o from repository, copy cri-o config file (3/4)
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/install/files/crio.conf"
        dest: /etc/crio/crio.conf
        owner: root
        group: root
        mode: 0644

      # systemctl enable crio && systemctl restart crio
    - name: Install cri-o from repository, start and enable cri-o (4/4)
      ansible.builtin.systemd:
        name: crio
        state: restarted
        enabled: True
        daemon_reload: True
