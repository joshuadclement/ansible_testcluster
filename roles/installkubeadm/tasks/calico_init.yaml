- name: Check calico installed
  when: "'control_plane' in group_names"
  ansible.builtin.shell: kubectl calico version | grep "Cluster Version"
  failed_when: False
  changed_when: False
  register: calico_result
  
- name: Install Calico in control_plane
  when:
    - "'control_plane' in group_names"
    - calico_result.stdout_lines | count == 0
  block:
    - name: Install Calico, get manifest (1/7)
      ansible.builtin.get_url:
        url: "{{ calico_manifest_url }}"
        dest: /tmp/tigera-operator.yaml
        checksum: "{{ calico_manifest_checksum }}"

    # Needs server_side_apply in order to avoid the annotations.last-applied-configuration too long error
    - name: Install Calico, apply manifest (2/7)
      kubernetes.core.k8s:
        kubeconfig: "{{ k8s_admin_config }}"
        apply: True
        src: /tmp/tigera-operator.yaml
        wait: True
        server_side_apply:
          field_manager: kubectl
          force_conflicts: True

    - name: Install Calico, copy config (3/7)
      ansible.builtin.template:
        src: "{{ role_path }}/templates/tigera-custom-resources.yaml.j2"
        dest: /tmp/tigera-custom-resources.yaml

    - name: Install Calico, apply custom resource manifest (4/7)
      kubernetes.core.k8s:
        kubeconfig: "{{ k8s_admin_config }}"
        apply: True
        src: /tmp/tigera-custom-resources.yaml
        wait: True
        server_side_apply:
          field_manager: kubectl
          force_conflicts: True

    - name: Install Calico, clean up files (5/7)
      ansible.builtin.file:
        path: /tmp/tigera-custom-resources.yaml
        state: absent

    - name: Install Calico, clean up files (6/7)
      ansible.builtin.file:
        path: /tmp/tigera-operator.yaml
        state: absent

    - name: Install Calico, fetch calicoctl (7/7) 
      ansible.builtin.get_url:
        url: "{{ calicoctl_url }}"
        checksum: "{{ calicoctl_checksum }}"
        dest: /usr/local/bin/kubectl-calico
        mode: 0751
        owner: root
        group: root
