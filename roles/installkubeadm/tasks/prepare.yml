- name: Disable swap
  tags:
    - sysprepare
    - k8sinstall
  block:

  ### If swap is on, then `swapon --show` will output the swap devices in a table
  ### started with NAME. The grep command will have a nonzero exit code if it doesn't
  ### get that table.
  ### `register: swap_enabled` will record the exit code, and `ignore_errors` will keep
  ### it from complaining if it is nonzero
  - name: Check if swap enabled
    ansible.builtin.shell:
      cmd: swapon --show | grep NAME
    register: swap_enabled
    ignore_errors: True
  
  - name: Disable swap since kubernetes can't work with swap enabled (1/2)
    ansible.builtin.shell:
      cmd: swapoff -a
    when: swap_enabled == 0
  
  - name: Disable swap in fstab since kubernetes can't work with swap enabled (2/2)
    replace:
      path: /etc/fstab
      regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
      replace: '# \1'
    when: swap_enabled == 0


- name: Install/update system packages
  tags:
    - sysprepare
    - sysupdate
    - k8sinstall
  block:
  - name: Make sure packages are installed
    ansible.builtin.apt:
      update_cache: True
      name:
        - zsh
      state: present
  
  - name: Update
    ansible.builtin.apt:
      update_cache: True
      upgrade: True


- name: Setup shell
  tags:
    - sysprepare
  block:
  - name: Copy zshrc for a nice command line experience
    ansible.builtin.copy:
      src: "{{ role_path }}/files/zshrc"
      dest: /home/user/.zshrc
      owner: user
      group: user
      mode: 0644
  
  - name: Set user shell
    ansible.builtin.user:
      shell: /bin/zsh
      name: user

- name: Check whether golang is installed
  tags:
    - sysprepare
    - golang
  ansible.builtin.shell: |
    VERSION=$(go version | sed -e 's/.*go\([0-9]\+[.][0-9]\+[.][0-9]\+\).*/\1/')
    [[ $VERSION != {{ golang_version }} ]]
  register: golang_correct_version
  ignore_errors: True

- name: Install golang
  tags:
    - sysprepare
    - golang
  when: golang_correct_version == 0
  block:
  - name: Install golang, fetch files (1/3)
    ansible.builtin.get_url:
      url: "{{ golang_tar_url }}"
      checksum: "{{ golang_tar_checksum }}"
      dest: /tmp/go.tar.gz
  
  - name: Install golang, extract (2/3)
    ansible.builtin.unarchive:
      remote_src: True
      src: /tmp/go.tar.gz
      dest: /usr/local/
    become: True
  
  - name: Install golang, clean (3/3)
    ansible.builtin.file:
      state: absent
      path: /tmp/go.tar.gz
