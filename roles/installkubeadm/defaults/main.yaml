# Kubernetes
pod_network_cidr: "10.128.0.0/15"
trusted_network_gateway: "10.0.0.1"
trusted_network_nameserver: "10.0.0.1"
trusted_network_mask: "24"
trusted_network_cidr: "10.0.0.0/{{ trusted_network_mask }}"
#  split network cidr into segment for silos and segment for cluster nodes
trusted_silo_cidr: "10.0.0.0/25"
trusted_cluster_cidr: "10.0.0.128/25"
kubernetes_major_version: "1"
kubernetes_minor_version: "25"
kubernetes_patch_version: "2"
kubernetes_version: "{{ kubernetes_major_version }}.{{ kubernetes_minor_version }}.{{ kubernetes_patch_version }}"
k8s_admin_config: "/etc/kubernetes/admin.conf"
k8s_admin_context: "/kubernetes-admin@kubernetes"
apiserver_port: "6443"

# Cri-o (Container Runtime Interface)
crio_os_tag: "xUbuntu_22.04"
crio_version: "{{ kubernetes_major_version }}.{{ kubernetes_minor_version }}.1"
crio_version_subpatch: "2"
crictl_version: "v{{ kubernetes_major_version }}.{{ kubernetes_minor_version }}.0"
crictl_url: "https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ crictl_version }}/crictl-{{ crictl_version }}-linux-amd64.tar.gz"
crictl_checksum: "sha256:86ab210c007f521ac4cdcbcf0ae3fb2e10923e65f16de83e0e1db191a07f0235"

# Golang
golang_version: "1.19.1"
golang_tar_url: "https://go.dev/dl/go1.19.1.linux-amd64.tar.gz"
golang_tar_checksum: "sha256:acc512fbab4f716a8f97a8b3fbaa9ddd39606a28be6c2515ef7c6c6311acffde"

# Helm
helm_binary_url: "https://get.helm.sh/helm-v3.10.1-linux-amd64.tar.gz"
helm_binary_checksum: "sha256:c12d2cd638f2d066fec123d0bd7f010f32c643afdf288d39a4610b1f9cb32af3"
helm_version: "3.10.1"

# Calico (Container Network Interface)
calico_version: "v3.24.3"
calicoctl_url: "https://github.com/projectcalico/calico/releases/download/{{ calico_version }}/calicoctl-linux-amd64"
calicoctl_checksum: "sha256:22d7ba5547aff1b4202ddd55952c1e5b6e45e416cd79e1721438aab54a23324a"

# Cert_manager
letsencrypt_email: "joshuaclement@deic.dk"

# Docker registry
docker_registry_node_port: 30001
docker_registry_nfs_IP: "10.0.0.20"
docker_registry_nfs_path: "/tank/storage/dockerregistry2"
docker_registry_admin_password: ""
docker_registry_auth:
  admin: "{{ docker_registry_admin_password }}"
docker_registry_domain: "dockerregistry.clement.tel"
docker_registry_tls_secret: "tls-dockerregistry-clement-tel"

# Vlan
vlan_interface: "vlan300"
vlan_id_number: 300
vlan_subnet_mask: 24
vlan_subnet_cidr: "10.2.0.0/{{ vlan_subnet_mask }}"

# user_pods_backend
backend_manifests_dir: "~/go/src/github.com/deic.dk/kubernetes_backend/manifests"
backend_readonly_pv_nfs_ip: "10.0.0.20"
backend_ingress_domain: "pods.clement.tel"
backend_ingress_domain_testing: "testpods.clement.tel"
backend_ssh_pubkey: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFFaL0dy3Dq4DA5GCqFBKVWZntBSF0RIeVd9/qdhIj2n"
cloudflare_api_token: ""

# acme-dns
# The domain zone that the NS is responsible for serving records for
acmedns_zone: "acme.clement.tel"
# The domain where the NS is found (which ingress should receive traffic for)
acmedns_hostname: "dns01.clement.tel"
acmedns_nfs_IP: "10.0.0.20"
acmedns_nfs_path: "/tank/storage/acmedns"
acmedns_admin_email: "joshuaclement@deic.dk"
acmedns_host_http_port: "15380"
# The name as given in hosts.yaml
acmedns_node: "worker3.sciencedata.dk"
